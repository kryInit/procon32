name: restorer's requirement

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - kr

jobs:
  job0:
    name: compile
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      - name: compile
        run: |
          mkdir build
          cd build
          cmake ..
          make
        working-directory: ./algo/src


  job1:
    name: image restorer test
    runs-on: ubuntu-20.04
    if: "contains(github.event.head_commit.message, '[run ci]')"
    steps:
      - uses: actions/checkout@v2

      - name: install library
        run: |
          pip install Pillow
          pip install docopt
          pip install numpy
          pip install toml

      - name: download images and config and testcase
        run: |
          ZIP_ID="1xF_9FrIPRzSEhyXO-D5XWZ0knmZ6oztt"
          curl -sc /tmp/cookie "https://drive.google.com/uc?export=download&id=${ZIP_ID}" > /dev/null
          CODE="$(awk '/_warning_/ {print $NF}' /tmp/cookie)"
          curl -Lb /tmp/cookie "https://drive.google.com/uc?export=download&confirm=${CODE}&id=${ZIP_ID}" -o tmp.zip
          unzip tmp.zip
        working-directory: ./test

      - name: register images
        run: python tester.py images add -r images_for_procon32
        working-directory: ./test

      - name: dump images list
        run: python tester.py images list -d
        working-directory: ./test

      - name: test restorer
        run: python tester.py requirement images_for_procon32/config.toml images_for_procon32/all.toml --force
        working-directory: ./test

  dummy:
    name: dummy
    runs-on: ubuntu-20.04
    if: "!contains(github.event.head_commit.message, '[run ci]')"
    steps:
      - name: dummy
        run: exit -1

